
#include <Arduino_FreeRTOS.h>


TaskHandle_t Handle_Task1, Handle_Task2;


uint8_t Count = 0;


void setup() {

  Serial.begin(9600);

  pinMode(2, INPUT);

  attachInterrupt(digitalPinToInterrupt(2), Function_ISR, LOW);

  xTaskCreate(Task_1, "Task 1", 300, NULL, 1, &Handle_Task1);

  xTaskCreate(Task_2, "Task 2", 300, NULL, 2, &Handle_Task2);

}


void Task_1 (void *pvParameters) {

  UBaseType_t Priority_Task1;

  UBaseType_t Priority_Task2;

  while(1) {

    Serial.println("Task 1 is runnning");

    Priority_Task1 = uxTaskPriorityGet(NULL);

    Priority_Task2 = uxTaskPriorityGet(Handle_Task2);


    Serial.println(Priority_Task1);

    Serial.println(Priority_Task2);
    
    
    vTaskPrioritySet(Handle_Task2, (Priority_Task1 + 1));


    Count ++;

    vTaskDelay(pdMS_TO_TICKS(1000));
  }
}


void Task_2 (void *pvParameters) {

  UBaseType_t Priority_Task1;

  UBaseType_t Priority_Task2;
  
  while(1) {

    Serial.println("Task 2 is runnning");

    Priority_Task1 = uxTaskPriorityGet(Handle_Task1);

    Priority_Task2 = uxTaskPriorityGet(NULL);


    Serial.println(Priority_Task1);
  
    Serial.println(Priority_Task2);

    Serial.println(Count);


    if(Count > 10) {

      vTaskSuspend(Handle_Task2);
    }


    Serial.println("PLUTO");


    vTaskPrioritySet(NULL, (Priority_Task2 - 2));

    vTaskDelay(pdMS_TO_TICKS(1000));
  }
}



void Function_ISR() {

  if(digitalRead(2) == LOW) {

    //Serial.println("Riabilitiamo il task 2");
    Count = 0;
    vTaskResume(Handle_Task2);
  }
}


void loop() {

}
