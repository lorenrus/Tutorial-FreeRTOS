


#include <Arduino_FreeRTOS.h>
#include "queue.h"

QueueHandle_t Queue_Handle;


void setup() {
  // put your setup code here, to run once:

  Serial.begin(9600);

  

  Queue_Handle = xQueueCreate(5, sizeof(uint8_t));

  

  if(Queue_Handle != NULL) {

    Serial.println("Coda ok");

    xTaskCreate( Sender_Task, "Sender 1", 80, (void *) 100, 2, NULL);
    xTaskCreate( Sender_Task, "Sender 2", 80, (void *) 200, 2, NULL);

    xTaskCreate( Receiver_Task, "Receiver", 700, NULL, 1, NULL);
  }
  else {
    
    Serial.println("Error");
  }

  
  //vTaskStartScheduler();
  //for(;;);
}


void Sender_Task(void *pvParameters) {

  uint8_t Data_In = (uint8_t) pvParameters;

  BaseType_t Status;

  TickType_t TimetoWait = pdMS_TO_TICKS(500);

  while(1) {

    Status = xQueueSendToBack(Queue_Handle, &Data_In, TimetoWait);

    if(Status != pdPASS) {

      Serial.println("Error TX");
    }
    else {

      Serial.println("Ok TX");
    }
  }
}


void Receiver_Task(void *pvParameters) {

  uint8_t Data_Received;

  TickType_t TimetoWait = pdMS_TO_TICKS(500);

  BaseType_t Status;

  while(1) {

    Status = xQueueReceive(Queue_Handle, &Data_Received, 0);

    if(Status != pdPASS) {

      Serial.println("Error RX");
    }
    else {

      Serial.println("Ok RX");

      Serial.print("Data received : ");
      Serial.println(Data_Received);
    }
  }
}



void loop() {
  // put your main code here, to run repeatedly:

}
